{
  "name": "simmetrics",
  "version": "0.8.5",
  "description": "An optimized port of the SimMetrics Java library",
  "keywords": [
    "SimMetrics",
    "string",
    "similarity"
  ],
  "bugs": {
    "email": "enovacrazy@gmail.com"
  },
  "license": "GPv2",
  "author": {
    "name": "Aaron Trent",
    "email": "novacrazy@gmail.com",
    "url": "www.novacrazy.com"
  },
  "files": [
    "./index.js",
    "./lib"
  ],
  "main": "simmetrics",
  "repository": {
    "type": "git",
    "url": "http://www.github.com/lawrenae/simmetrics.git"
  },
  "dependencies": {
    "lodash": "*"
  },
  "devDependencies": {
      "csv": "^0.4.1",
      "should": "^4.3.0"
  },
  "engines": {
    "node": ">=0.10"
  },
  "private": true,
  "readme": "JavaScript port of the SimMetrics Java library plus more.\n===\n\nHand-optimized and re-factored to provide clean and fast string similarity algorithms for JavaScript developers.\n\nAlthough this is designed for Node.js, I will provide a browser version sometime in the future (or if anyone would like to contribute one).\n\nSo far, nearly all parts of the library have been ported. Algorithms left to be added are:\n\n\tSmithWatermanGotoh\n\tSmithWatermanGotohWindowedAffine\n\tTagLink\n\tTagLinkToken\n\nI should have those up very soon.\n\nA note I should make: I did not include the original timing tests for each one. I think they are unnecessary. However, as they can be useful sometimes, I will include them sometime as seperate modules which can be merged into the algorithms.\n\nSoundex Notes:\n\tSoundex works as an object created by new, in which case the normal soundex function is called as instance.soundex(input[, length]); OR you can simply call the Soundex function directly as Soundex(input[, length]);\n\n\tAlso, it does not include the hyphen between the leading letter and the soundex numbers.\n",
  "readmeFilename": "README.md"
}
